openapi: 3.1.0
info:
  title: SyncroSim API
  description: API for managing organizations, libraries, maps, and performing zonal calculations.
  version: 1.0.0
  contact:
    name: SyncroSim API Support
    email: support@syncrosim.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.syncrosim.com/v1
    description: Production server
security:
  - apiKeyAuth: []
paths:
  /orgs/{organization}/members:
    get:
      summary: Get members of an organization
      operationId: getOrganizationMembers
      tags:
        - Organization
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
          description: The name of the organization
      responses:
        "200":
          description: List of members in the organization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    usernames:
                      type: string
                      description: Username of the member
    post:
      summary: Add a member to an organization
      operationId: addOrganizationMember
      tags:
        - Organization
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
          description: The name of the organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username to add to the organization
      responses:
        "201":
          description: Member added successfully
  /orgs/{organization}/members/{username}:
    delete:
      summary: Remove a member from an organization
      operationId: removeOrganizationMember
      tags:
        - Organization
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
          description: The name of the organization
        - name: username
          in: path
          required: true
          schema:
            type: string
          description: Username to remove from the organization
      responses:
        "204":
          description: Member removed successfully

  /orgs/{organization}/libs:
    get:
      summary: Get libraries of an organization
      operationId: getLibraries
      tags:
        - Libraries
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
          description: The name of the organization
      responses:
        "200":
          description: List of libraries in the organization
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    libraryName:
                      type: string
                      description: Name of the library

  /orgs/{organization}/libs/{libraryName}/metadata:
    get:
      summary: Get library metadata
      operationId: getLibraryMetadata
      tags:
        - Libraries
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
          description: The name of the organization
        - name: libraryName
          in: path
          required: true
          schema:
            type: string
          description: The name of the library
      responses:
        "200":
          description: Metadata of the library
          content:
            application/json:
              schema:
                type: object
                properties:
                  libraryName:
                    type: string
                  owner:
                    type: string
                  lastModified:
                    type: string
                  fileSize:
                    type: string
                  packageName:
                    type: string
                  packageVersion:
                    type: string
                  syncrosimVersion:
                    type: string
                  description:
                    type: string

  /orgs/{organization}/libs/{libraryName}/scenarios:
    get:
      summary: Get scenarios in a library
      operationId: getLibraryScenarios
      tags:
        - Libraries
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
        - name: libraryName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of scenarios in the library
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    projectId:
                      type: number
                    scenarioId:
                      type: number
                    parentId:
                      type: string
                    isResult:
                      type: boolean
                    lastModified:
                      type: string
                    description:
                      type: string

  /orgs/{organization}/libs/{libraryName}/maps:
    get:
      summary: Get maps in a library
      operationId: getLibraryMaps
      tags:
        - Maps
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
        - name: libraryName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of maps in the library
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    mapId:
                      type: string
                    mapLayoutTitle:
                      type: string
                    scenarioId:
                      type: string
                    iteration:
                      type: integer
                    timestep:
                      type: integer
                    variable:
                      type: string
                    variableDisplayName:
                      type: string

  /orgs/{organization}/libs/{libraryName}/maps/{mapId}:
    get:
      summary: Get raster GeoTIFF file for a map
      operationId: getRasterFile
      tags:
        - Maps
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
        - name: libraryName
          in: path
          required: true
          schema:
            type: string
        - name: mapId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Path to GeoTIFF file
          content:
            application/json:
              schema:
                type: object
                properties:
                  rasterFilePath:
                    type: string

  /orgs/{organization}/libs/{libraryName}/maps/{mapId}/zonal:
    post:
      summary: Perform zonal calculations
      operationId: performZonalCalculation
      tags:
        - Maps
      parameters:
        - name: organization
          in: path
          required: true
          schema:
            type: string
        - name: libraryName
          in: path
          required: true
          schema:
            type: string
        - name: mapId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                geojson:
                  type: object
                  description: GeoJSON defining the area of interest
      responses:
        "200":
          description: Zonal calculation results
          content:
            application/json:
              schema:
                type: object
                properties:
                  summaryValue:
                    type: object
components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: Use your API key to access the endpoints.
